<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classification_8py" kind="file" language="Python">
    <compoundname>classification.py</compoundname>
    <innernamespace refid="namespaceclassification">classification</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceclassification" refkind="compound"><highlight class="comment">#!/usr/bin/env<sp/>python3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Classification<sp/>script<sp/>for<sp/>UAF-Plankline</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">Usage:</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>./classification.py<sp/>-c<sp/>&lt;config.ini&gt;<sp/>-d<sp/>&lt;project<sp/>directory&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">License:</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2023<sp/>Thomas<sp/>Kelly</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>shutil</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>argparse</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>glob</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>configparser</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging.config</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tqdm</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>time<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>multiprocessing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Pool,<sp/>Queue</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>psutil</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="namespaceclassification_1a058b4a55f59dd39b4354f2c7767a442f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceclassification_1a058b4a55f59dd39b4354f2c7767a442f" kindref="member">classify</ref>(tar_file):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Classify<sp/>images<sp/>contained<sp/>within<sp/>a<sp/>TAR<sp/>file.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_classify<sp/>=<sp/>time()</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>classify&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>date<sp/>=<sp/>datetime.datetime.now().strftime(</highlight><highlight class="stringliteral">&quot;%Y-%m-%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>basename<sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;classification&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;basename&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Basename<sp/>for<sp/>model<sp/>run<sp/>is<sp/>{basename}.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Current<sp/>ram<sp/>usage<sp/>(GB):<sp/>{psutil.virtual_memory()[3]/1000000000:.2f}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Current<sp/>cpu<sp/>usage<sp/>(%):<sp/>{psutil.cpu_percent(4):.1f}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config[</highlight><highlight class="stringliteral">&apos;general&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;compress_output&apos;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;True&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_dir<sp/>=<sp/>tar_file.replace(</highlight><highlight class="stringliteral">&quot;.tar.gz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>remove<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tar_identifier<sp/>=<sp/>os.path.basename(image_dir)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_dir<sp/>=<sp/>fast_scratch<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>tar_identifier</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.makedirs(tmp_dir,<sp/>permis,<sp/>exist_ok<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_file<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{classification_dir}/{tar_identifier}-{date}.log&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_dir<sp/>=<sp/>tar_file.replace(</highlight><highlight class="stringliteral">&quot;.tar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>remove<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tar_identifier<sp/>=<sp/>os.path.basename(image_dir)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_dir<sp/>=<sp/>fast_scratch<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>tar_identifier</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.makedirs(tmp_dir,<sp/>permis,<sp/>exist_ok<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_file<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{classification_dir}/{tar_identifier}-{date}.log&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>image_dir<sp/>=<sp/>tmp_dir</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_id<sp/>=<sp/>queue.get()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Starting<sp/>on<sp/>GPU<sp/>{gpu_id}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&apos;image_dir:<sp/>{image_dir}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&apos;tar_identifier:<sp/>{tar_identifier}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Untar<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config[</highlight><highlight class="stringliteral">&apos;general&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;compress_output&apos;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;True&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>untar_cmd<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;tar<sp/>-xzf<sp/>&quot;{tar_file}&quot;<sp/>-C<sp/>&quot;{image_dir}&quot;<sp/>--strip-components=4<sp/>--wildcards<sp/>&quot;*.png&quot;<sp/><sp/>&gt;&gt;<sp/>&quot;{log_file}&quot;<sp/>2&gt;&amp;1&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>TBK<sp/>change<sp/>strip-components<sp/>to<sp/>what<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Untarring+unzipping<sp/>files:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>untar_cmd)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>untar_cmd<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;tar<sp/>-xf<sp/>&quot;{tar_file}&quot;<sp/>-C<sp/>&quot;{image_dir}&quot;<sp/>--strip-components=4<sp/>--wildcards<sp/>&quot;*.png&quot;<sp/><sp/>&gt;&gt;<sp/>&quot;{log_file}&quot;<sp/>2&gt;&amp;1&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>TBK<sp/>change<sp/>strip-components<sp/>to<sp/>what<sp/>you<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Untarring<sp/>files:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>untar_cmd)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_untar<sp/>=<sp/>time()</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>os.system(untar_cmd)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_untar<sp/>=<sp/>time()<sp/>-<sp/>timer_untar</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Untarring<sp/>files<sp/>took<sp/>{timer_untar:.3f}<sp/>s.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Perform<sp/>classification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>scnn_cmd<sp/><sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;cd<sp/>&apos;{scnn_directory}&apos;;<sp/>nohup<sp/>&apos;{scnn_command}&apos;<sp/>-start<sp/>{epoch}<sp/>-stop<sp/>{epoch}<sp/>-unl<sp/>&apos;{image_dir}&apos;<sp/>-cD<sp/>{gpu_id}<sp/>-basename<sp/>{basename}<sp/>&gt;&gt;<sp/>&apos;{log_file}&apos;<sp/>2&gt;&amp;1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Running<sp/>SCNN:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>scnn_cmd)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Start<sp/>SCNN.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_scnn<sp/>=<sp/>time()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>os.system(scnn_cmd)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_scnn<sp/>=<sp/>time()<sp/>-<sp/>timer_scnn</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(</highlight><highlight class="stringliteral">&apos;End<sp/>SCNN.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;SCNN<sp/>took<sp/>{timer_scnn:.3f}<sp/>s.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Move<sp/>the<sp/>csv<sp/>file<sp/>resulting<sp/>from<sp/>classification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Looking<sp/>for<sp/>files<sp/>in<sp/>{scnn_directory}/Data/{basename}/<sp/>that<sp/>match<sp/>the<sp/>id:<sp/>{tar_identifier}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>csv_path<sp/>=<sp/>glob.glob(f</highlight><highlight class="stringliteral">&quot;{scnn_directory}/Data/{basename}/*{tar_identifier[10:]}*&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(csv_path)<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csv_path<sp/>=<sp/>csv_path[0]</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csv_file<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{classification_dir}/{tar_identifier}.csv&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_move<sp/>=<sp/>time()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutil.move(csv_path,<sp/>csv_file)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.chmod(csv_file,<sp/>permis)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_move<sp/>=<sp/>time()<sp/>-<sp/>timer_move</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Moving<sp/>csv(s)<sp/>took<sp/>{timer_move:.3f}<sp/>s.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(f</highlight><highlight class="stringliteral">&apos;No<sp/>classification<sp/>file<sp/>found<sp/>for<sp/>{tar_identifier}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Clean<sp/>directories<sp/>to<sp/>make<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>shutil.rmtree(image_dir)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>queue.put(gpu_id)<sp/></highlight><highlight class="comment">#<sp/>add<sp/>the<sp/>gpu<sp/>id<sp/>to<sp/>the<sp/>queue<sp/>so<sp/>that<sp/>it<sp/>can<sp/>be<sp/>allocated<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;End<sp/>classify.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_classify<sp/>=<sp/>time()<sp/>-<sp/>timer_classify</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Total<sp/>classification<sp/>process<sp/>took<sp/>{timer_classify:.3f}<sp/>s.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config[</highlight><highlight class="stringliteral">&apos;R&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;preprocess&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_pre<sp/>=<sp/>time()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&apos;Preprocessing<sp/>requested.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pre_cmd<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Rscript<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>config[</highlight><highlight class="stringliteral">&apos;R&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;script&apos;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>config[</highlight><highlight class="stringliteral">&apos;R&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;dt&apos;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>config[</highlight><highlight class="stringliteral">&apos;R&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;p_threshold&apos;</highlight><highlight class="normal">]<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&quot;&apos;</highlight><highlight class="normal"><sp/>+<sp/>csv_file<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Running<sp/>preprocessing<sp/>cmd:<sp/>{pre_cmd}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.system(pre_cmd)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_pre<sp/>=<sp/>time()<sp/>-<sp/>timer_pre</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Preprocessing<sp/>took<sp/>{timer_pre:.3f}<sp/>s.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Main<sp/>entry<sp/>point<sp/>for<sp/>classification.py&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>v_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;V2023.09.05&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Starting<sp/>Plankline<sp/>Classification<sp/>Script<sp/>{v_string}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>create<sp/>a<sp/>parser<sp/>for<sp/>command<sp/>line<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>argparse.ArgumentParser(description=</highlight><highlight class="stringliteral">&quot;Classification<sp/>tool<sp/>for<sp/>managing<sp/>the<sp/>isiis_scnn<sp/>processes&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--config&quot;</highlight><highlight class="normal">,<sp/>required<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>help<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Configuration<sp/>ini<sp/>file.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&quot;-d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--directory&quot;</highlight><highlight class="normal">,<sp/>required<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>read<sp/>in<sp/>the<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>parser.parse_args()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>config<sp/>=<sp/>configparser.ConfigParser()</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(</highlight><highlight class="stringliteral">&apos;default.ini&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.read(</highlight><highlight class="stringliteral">&apos;default.ini&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>config.read(args.config)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>working_dir<sp/>=<sp/>os.path.abspath(args.directory)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>logging.config.fileConfig(config[</highlight><highlight class="stringliteral">&apos;logging&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;config&apos;</highlight><highlight class="normal">],<sp/>defaults={</highlight><highlight class="stringliteral">&apos;date&apos;</highlight><highlight class="normal">:datetime.datetime.now().strftime(</highlight><highlight class="stringliteral">&quot;%Y%m%d-%H%M%S&quot;</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&apos;path&apos;</highlight><highlight class="normal">:working_dir,</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;classification&apos;</highlight><highlight class="normal">})<sp/></highlight><highlight class="comment">#<sp/>TBK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>logger<sp/>=<sp/>logging.getLogger(</highlight><highlight class="stringliteral">&apos;sLogger&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>permis<sp/>=<sp/>int(config[</highlight><highlight class="stringliteral">&apos;general&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;dir_permissions&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>scnn_instances<sp/>=<sp/>int(config[</highlight><highlight class="stringliteral">&apos;classification&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;scnn_instances&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>scnn_directory<sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;classification&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;scnn_dir&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>scnn_command<sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;classification&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;scnn_cmd&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>epoch<sp/>=<sp/>int(config[</highlight><highlight class="stringliteral">&apos;classification&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;epoch&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>fast_scratch<sp/>=<sp/>config[</highlight><highlight class="stringliteral">&apos;segmentation&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;fast_scratch&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Print<sp/>config<sp/>options<sp/>to<sp/>screen<sp/>(TBK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Starting<sp/>plankline<sp/>classification<sp/>{v_string}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Configureation<sp/>file:<sp/>{args.config}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Segmentation<sp/>on:<sp/>{working_dir}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>instances:<sp/>{scnn_instances}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Epoch:<sp/>{epoch}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Log<sp/>configuration<sp/>file:<sp/>{config[&apos;logging&apos;][&apos;config&apos;]}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>Check<sp/>the<sp/>permissions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.access(working_dir,<sp/>os.W_OK)<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(f</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>project<sp/>directory<sp/>{working_dir}!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit()</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.access(fast_scratch,<sp/>os.W_OK)<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(f</highlight><highlight class="stringliteral">&quot;Cannot<sp/>write<sp/>to<sp/>temporary<sp/>directory<sp/>{fast_scratch}!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit()</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>segmentation_dir<sp/>is<sp/>where<sp/>the<sp/>input<sp/>data<sp/>is<sp/>taken<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>segmentation_dir<sp/>=<sp/>working_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/segmentation&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>classification_dir<sp/>=<sp/>working_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/classification&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>fast_scratch<sp/>=<sp/>fast_scratch<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/classify-&quot;</highlight><highlight class="normal"><sp/>+<sp/>datetime.datetime.now().strftime(</highlight><highlight class="stringliteral">&quot;%Y%m%d-%H%M%S&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>os.makedirs(classification_dir,<sp/>permis,<sp/>exist_ok<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>os.makedirs(fast_scratch,<sp/>permis,<sp/>exist_ok<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>sure<sp/>this<sp/>is<sp/>a<sp/>valid<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(segmentation_dir):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.error(f</highlight><highlight class="stringliteral">&quot;Segmentation<sp/>directory<sp/>{segmentation_dir}<sp/>does<sp/>not<sp/>exist<sp/>(and<sp/>it<sp/>should)!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>config[</highlight><highlight class="stringliteral">&apos;general&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;compress_output&apos;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;True&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tars<sp/>=<sp/>[os.path.join(segmentation_dir,<sp/>tar)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tar<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.listdir(segmentation_dir)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tar.endswith(</highlight><highlight class="stringliteral">&quot;.tar.gz&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tars<sp/>=<sp/>[os.path.join(segmentation_dir,<sp/>tar)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tar<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.listdir(segmentation_dir)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tar.endswith(</highlight><highlight class="stringliteral">&quot;.tar&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tars)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(</highlight><highlight class="stringliteral">&quot;Error:<sp/>No<sp/>tars<sp/>file<sp/>in<sp/>segmenation<sp/>directory&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>setup<sp/>gpu<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>num_gpus<sp/>=<sp/>str(subprocess.check_output([</highlight><highlight class="stringliteral">&quot;nvidia-smi&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-L&quot;</highlight><highlight class="normal">])).count(</highlight><highlight class="stringliteral">&apos;UUID&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>read<sp/>number<sp/>of<sp/>gpus<sp/>from<sp/>nvidia-smi<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>queue<sp/>=<sp/>Queue()</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>gpu_id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_gpus):</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(scnn_instances):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue.put(gpu_id)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>num_processes<sp/>=<sp/>scnn_instances<sp/>*<sp/>num_gpus</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>tar_length<sp/>=<sp/>len(tars)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>GPUs:<sp/>{num_gpus}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;SCNN<sp/>Instances<sp/>per<sp/>GPU:<sp/>{scnn_instances}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Total<sp/>Processes:<sp/>{num_processes}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Identified<sp/>{tar_length}<sp/>tar.gz<sp/>files&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>is<sp/>the<sp/>parallel<sp/>portion<sp/>of<sp/>the<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>Pool(num_processes)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Start<sp/>the<sp/>Classification<sp/>processes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_pool<sp/>=<sp/>time()</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tqdm.tqdm(p.imap_unordered(classify,<sp/>tars,<sp/>chunksize<sp/>=<sp/>1),<sp/>total<sp/>=<sp/>len(tars)):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>p.close()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>p.join()<sp/></highlight><highlight class="comment">#<sp/>blocks<sp/>so<sp/>that<sp/>we<sp/>can<sp/>wait<sp/>for<sp/>the<sp/>processes<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_pool<sp/>=<sp/>time()<sp/>-<sp/>timer_pool</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Finished<sp/>classification<sp/>in<sp/>{timer_pool:.3f}<sp/>seconds.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Finished<sp/>Classification<sp/>in<sp/>{timer_pool:.1f}<sp/>seconds.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Deleting<sp/>temporary<sp/>directory<sp/>{fast_scratch}.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>shutil.rmtree(fast_scratch,<sp/>ignore_errors=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>cp_file<sp/>=<sp/>classification_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(datetime.datetime.now())<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>args.config</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(f</highlight><highlight class="stringliteral">&quot;Copying<sp/>ini<sp/>file<sp/>to<sp/>classification<sp/>directory<sp/>{classification_dir}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.info(f</highlight><highlight class="stringliteral">&quot;Copy<sp/>of<sp/>log<sp/>file<sp/>in<sp/>{cp_file}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>shutil.copy2(args.config,<sp/>cp_file)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.debug(</highlight><highlight class="stringliteral">&quot;Done.&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="classification.py"/>
  </compounddef>
</doxygen>
