<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="md_readme" kind="page">
    <compoundname>md_readme</compoundname>
    <title>Plankline Scripts</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Scripts were originally from the Plankline project controlled by OSU (citation&apos;s to be included). I have heavily modified and repurposed the code to suit our architecture and to improve logging and performance. These scripts are available as is and I make no claim to ownership or control of any potentially sensitive code. These are intended for in-house use at UAF.</para>
<sect1 id="md_readme_1autotoc_md1">
<title>Setup and Documentation</title>
<para>The Plankline suite of processing scripts is split into three main modules: (1) segmentation, (2) classification, (3) analysis; and is unified with the scripts in this repository.</para>
<para>If you are new to linux and setting up a Plankline instance for the first time, please start with the Linues Setup and the Notes/General%20Setup.md &quot;Plankline Setup&quot; guides.</para>
<para>For documentation on how Plankline works, please see the Plankline reference.</para>
<para>Optionally we also have a preliminary Morphocluster setup guide for those that are interested.</para>
</sect1>
<sect1 id="md_readme_1autotoc_md2">
<title>Quick start</title>
<para>To run plankline with a specific configuration file and input directory: <verbatim>python3 segmentation.py -c &lt;ini&gt; -d &lt;dir&gt;
python3 classification.py -c &lt;ini&gt; -d &lt;dir&gt;
</verbatim> So for example: <verbatim>python3 segmentation.py -c osu_test_config.ini -d /media/plankline/data/test_data
</verbatim> </para>
</sect1>
    </detaileddescription>
    <location file="readme.md"/>
  </compounddef>
</doxygen>
