<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacepull__all" kind="namespace" language="Python">
    <compoundname>pull_all</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacepull__all_1a81d45b43e8707b587b615e53f8f6934d" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string pull_all.v_string</definition>
        <argsstring></argsstring>
        <name>v_string</name>
        <initializer>=  &quot;V2023.09.05&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="238" column="1" bodyfile="pull_all.py" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a1eb77d6952144a2033e731675a8ba06c" prot="public" static="no" mutable="no">
        <type>def</type>
        <definition>def pull_all.parser</definition>
        <argsstring></argsstring>
        <name>parser</name>
        <initializer>=  get_parser()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="239" column="1" bodyfile="pull_all.py" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a9d1f54ec4e9d5849dee10c791616c024" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.csvs</definition>
        <argsstring></argsstring>
        <name>csvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="240" column="1" bodyfile="pull_all.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a0be92dcefe2b5d264df7d1033f833bc5" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.tars_dir</definition>
        <argsstring></argsstring>
        <name>tars_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="240" column="1" bodyfile="pull_all.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a9ee54ad0c0b28e796ca55252100db15a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.out_dir</definition>
        <argsstring></argsstring>
        <name>out_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="240" column="1" bodyfile="pull_all.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a32e304b1d15a4da8c11b47ca081fe7d8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.file_dict</definition>
        <argsstring></argsstring>
        <name>file_dict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="240" column="1" bodyfile="pull_all.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a7cb0e48c01ee0bfa19b72a27ca0f8e0d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.min_images</definition>
        <argsstring></argsstring>
        <name>min_images</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="240" column="1" bodyfile="pull_all.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1aa7c093e86b62470a8f3442b874264178" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.best</definition>
        <argsstring></argsstring>
        <name>best</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="240" column="1" bodyfile="pull_all.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a45638054960a4fe29f49faf2e6d9c1f8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.probability</definition>
        <argsstring></argsstring>
        <name>probability</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="240" column="1" bodyfile="pull_all.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a90c44b843833117d2f9d8fa8d125735c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.different</definition>
        <argsstring></argsstring>
        <name>different</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="240" column="1" bodyfile="pull_all.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1aad692a7c2f25a38b6e4042e8d10ddeaa" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.strict</definition>
        <argsstring></argsstring>
        <name>strict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="240" column="1" bodyfile="pull_all.py" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a320f45be6ef8531dd848a376a1be5eb4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <initializer>=  open(csvs[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="244" column="1" bodyfile="pull_all.py" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1aad98bca0cefb5829010a665a6c4616a2" prot="private" static="no" mutable="no">
        <type></type>
        <definition>pull_all._csv</definition>
        <argsstring></argsstring>
        <name>_csv</name>
        <initializer>=  csv.reader(f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="245" column="1" bodyfile="pull_all.py" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a4e96046838a095acf07114bf7cee3070" prot="public" static="no" mutable="no">
        <type>def</type>
        <definition>def pull_all.e_taxon</definition>
        <argsstring></argsstring>
        <name>e_taxon</name>
        <initializer>=  find_all_taxon(_csv)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="246" column="1" bodyfile="pull_all.py" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a752b1f13e8d10df1a7ffff86ecbee876" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.name_line</definition>
        <argsstring></argsstring>
        <name>name_line</name>
        <initializer>=  next(_csv)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="255" column="1" bodyfile="pull_all.py" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a36bdb2a40110a07fabddc8a3c0a88e91" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.tar_file</definition>
        <argsstring></argsstring>
        <name>tar_file</name>
        <initializer>=  file_dict[csv_file]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="256" column="1" bodyfile="pull_all.py" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a91a92461f936b103cf31ae22a2fa3844" prot="public" static="no" mutable="no">
        <type></type>
        <definition>def pull_all::matched_images</definition>
        <argsstring></argsstring>
        <name>matched_images</name>
        <initializer>=  dict()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="260" column="1" bodyfile="pull_all.py" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepull__all_1a44381c62fac6bd3f3303166482f58005" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pull_all.path_array</definition>
        <argsstring></argsstring>
        <name>path_array</name>
        <initializer>=  matched_images[os.path.basename(img)]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="266" column="1" bodyfile="pull_all.py" bodystart="266" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepull__all_1a136a9384f9380d60a3e0e013aac446a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.directory</definition>
        <argsstring>(arg)</argsstring>
        <name>directory</name>
        <param>
          <type>arg</type>
          <defname>arg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="40" column="1" bodyfile="pull_all.py" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1af51b51486a10761a87f54271c0a4cae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.csv_type</definition>
        <argsstring>(arg)</argsstring>
        <name>csv_type</name>
        <param>
          <type>arg</type>
          <defname>arg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="46" column="1" bodyfile="pull_all.py" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1adb1b4a1138f4f5efce9930442b2c8f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.float01</definition>
        <argsstring>(arg)</argsstring>
        <name>float01</name>
        <param>
          <type>arg</type>
          <defname>arg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="53" column="1" bodyfile="pull_all.py" bodystart="53" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1a130e94888d8a223c3c49b5d25a6ac0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.add_unique_postfix</definition>
        <argsstring>(fn)</argsstring>
        <name>add_unique_postfix</name>
        <param>
          <type>fn</type>
          <defname>fn</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="63" column="1" bodyfile="pull_all.py" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1a068926d489c8f255dc0589f5845ff07b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.get_parser</definition>
        <argsstring>()</argsstring>
        <name>get_parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="78" column="1" bodyfile="pull_all.py" bodystart="78" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1a4b0f6ccefc7723df59be4823b3f9a1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.validate_args</definition>
        <argsstring>(parser)</argsstring>
        <name>validate_args</name>
        <param>
          <type>parser</type>
          <defname>parser</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="100" column="1" bodyfile="pull_all.py" bodystart="100" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1af300459c0fc9fe3432fcb35f65e0e661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.find_all_taxon</definition>
        <argsstring>(csv)</argsstring>
        <name>find_all_taxon</name>
        <param>
          <type>csv</type>
          <defname>csv</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="166" column="1" bodyfile="pull_all.py" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1a1a606e063a794015e72685b4d78a7328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.invalid_taxon</definition>
        <argsstring>(parser, taxon_exist, all_taxon)</argsstring>
        <name>invalid_taxon</name>
        <param>
          <type>parser</type>
          <defname>parser</defname>
        </param>
        <param>
          <type>taxon_exist</type>
          <defname>taxon_exist</defname>
        </param>
        <param>
          <type>all_taxon</type>
          <defname>all_taxon</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="171" column="1" bodyfile="pull_all.py" bodystart="171" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1aa68e059b068f53bac74b929d041137a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.print_taxon</definition>
        <argsstring>(taxon_locations)</argsstring>
        <name>print_taxon</name>
        <param>
          <type>taxon_locations</type>
          <defname>taxon_locations</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="186" column="1" bodyfile="pull_all.py" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1a3f1779a4af4380b1169dd4520418747e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.find_top</definition>
        <argsstring>(csv, taxon_locations)</argsstring>
        <name>find_top</name>
        <param>
          <type>csv</type>
          <defname>csv</defname>
        </param>
        <param>
          <type>taxon_locations</type>
          <defname>taxon_locations</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="191" column="1" bodyfile="pull_all.py" bodystart="191" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1a7c02178cfb45b391367d7d7a404b75c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.find_above_prob</definition>
        <argsstring>(csv, taxon_locations, probability)</argsstring>
        <name>find_above_prob</name>
        <param>
          <type>csv</type>
          <defname>csv</defname>
        </param>
        <param>
          <type>taxon_locations</type>
          <defname>taxon_locations</defname>
        </param>
        <param>
          <type>probability</type>
          <defname>probability</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="205" column="1" bodyfile="pull_all.py" bodystart="205" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1a9056577087af2c734a79cd8a32850937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.untar</definition>
        <argsstring>(tar, out_dir)</argsstring>
        <name>untar</name>
        <param>
          <type>tar</type>
          <defname>tar</defname>
        </param>
        <param>
          <type>out_dir</type>
          <defname>out_dir</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="217" column="1" bodyfile="pull_all.py" bodystart="217" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="namespacepull__all_1ab586e829ea67d65e7dad185f04273367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pull_all.build_structure</definition>
        <argsstring>(path_array, taxon_locations)</argsstring>
        <name>build_structure</name>
        <param>
          <type>path_array</type>
          <defname>path_array</defname>
        </param>
        <param>
          <type>taxon_locations</type>
          <defname>taxon_locations</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pull_all.py" line="222" column="1" bodyfile="pull_all.py" bodystart="222" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Image Pulling script for UAF-Plankline

Usage:
    ./pull_all.py -d &lt;project directory&gt;

License:
    MIT License

    Copyright (c) 2023 Thomas Kelly

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the &quot;Software&quot;), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
</verbatim> </para>
    </detaileddescription>
    <location file="pull_all.py" line="1" column="1"/>
  </compounddef>
</doxygen>
